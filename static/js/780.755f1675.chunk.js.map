{"version":3,"file":"static/js/780.755f1675.chunk.js","mappings":"yJA+HA,UA7HkB,WACd,IAAAA,EAA0BC,EAAAA,SAAe,MAAKC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAvCI,EAAKF,EAAA,GAAEG,EAAQH,EAAA,GACtBI,EAAkCL,EAAAA,SAAe,CAC7CM,KAAM,EACNC,OAAQ,EACRC,OAAQ,IACVC,GAAAP,EAAAA,EAAAA,GAAAG,EAAA,GAJKK,EAASD,EAAA,GAAEE,EAAYF,EAAA,GAKxBG,EAAc,WAChBR,GAAS,SAAAS,GACL,OAAOA,EAAO,EAAIA,EAAO,EAAIA,CACjC,GACJ,EA6BA,OA3BAb,EAAAA,WAAgB,WACZ,IAAMc,EAAoBC,YAAYH,EAAa,KACnD,OAAO,kBAAMI,cAAcF,EAAmB,CAClD,GAAG,IAEHd,EAAAA,WAAgB,WACZ,IAAIiB,EAAK,EACLC,EAAK,EACLC,EAAKhB,EAELgB,GAAM,KACND,EAAKC,EAAK,GACVA,GAAU,IAGVD,GAAM,KACND,EAAKC,EAAK,GACVA,GAAU,IAGdP,EAAa,CACTL,KAAMc,SAASH,EAAGI,YAClBd,OAAQa,SAASF,EAAGG,YACpBb,OAAQY,SAASD,EAAGE,aAE5B,GAAG,CAAClB,KAGAmB,EAAAA,EAAAA,MAAA,OACIC,MAAO,CACHC,QAAS,OACTC,IAAK,OACPC,SAAA,EAEFJ,EAAAA,EAAAA,MAAA,OACIC,MAAO,CACHI,UAAW,SACXC,WAAY,MACZC,MAAO,QACTH,SAAA,EAEFI,EAAAA,EAAAA,KAAA,OACIP,MAAO,CACHQ,SAAU,QACZL,SAEAhB,EAAUJ,KAAKe,WAAWW,SAAS,EAAG,QAG5CF,EAAAA,EAAAA,KAAA,OACIP,MAAO,CACHQ,SAAU,OACVE,WAAY,QACdP,SACL,cAKLJ,EAAAA,EAAAA,MAAA,OACIC,MAAO,CACHI,UAAW,SACXC,WAAY,MACZC,MAAO,QACTH,SAAA,EAEFI,EAAAA,EAAAA,KAAA,OACIP,MAAO,CACHQ,SAAU,QACZL,SAEDhB,EAAUH,OAAOc,WAAWW,SAAS,EAAG,QAG7CF,EAAAA,EAAAA,KAAA,OACIP,MAAO,CACHQ,SAAU,OACVE,WAAY,QACdP,SACL,gBAKLJ,EAAAA,EAAAA,MAAA,OACIC,MAAO,CACHI,UAAW,SACXC,WAAY,MACZC,MAAO,QACTH,SAAA,EAEFI,EAAAA,EAAAA,KAAA,OACIP,MAAO,CACHQ,SAAU,QACZL,SAEDhB,EAAUF,OAAOa,WAAWW,SAAS,EAAG,QAG7CF,EAAAA,EAAAA,KAAA,OACIP,MAAO,CACHQ,SAAU,OACVE,WAAY,QACdP,SACL,kBAMjB,C","sources":["components/aula-gratis/Countdown.tsx"],"sourcesContent":["import React from \"react\";\n\nconst Countdown = () => {\n    const [count, setCount] = React.useState(1500);\n    const [countdown, setcountdown] = React.useState({\n        hour: 0,\n        minute: 0,\n        second: 0\n    });\n    const updateCount = () => {\n        setCount(prev => {\n            return prev > 0 ? prev - 1 : prev;\n        });\n    }\n\n    React.useEffect(() => {\n        const countdownInterval = setInterval(updateCount, 1000);\n        return () => clearInterval(countdownInterval);\n    }, []);\n\n    React.useEffect(() => {\n        let hh = 0;\n        let mm = 0;\n        let ss = count;\n\n        if (ss >= 60) {\n            mm = ss / 60;\n            ss = ss % 60;\n        }\n\n        if (mm >= 60) {\n            hh = mm / 60;\n            mm = mm % 60;\n        }\n\n        setcountdown({\n            hour: parseInt(hh.toString()),\n            minute: parseInt(mm.toString()),\n            second: parseInt(ss.toString())\n        });\n    }, [count]);\n\n    return (\n        <div\n            style={{\n                display: \"flex\",\n                gap: \"5px\"\n            }}\n        >\n            <div\n                style={{\n                    textAlign: \"center\",\n                    fontWeight: \"700\",\n                    width: \"65px\"\n                }}\n            >\n                <div\n                    style={{\n                        fontSize: \"30px\"\n                    }}\n                >\n                    { countdown.hour.toString().padStart(2, '0') }\n                </div>\n\n                <div\n                    style={{\n                        fontSize: \"12px\",\n                        lineHeight: \"25px\"\n                    }}\n                >\n                    Horas\n                </div>\n            </div>\n\n            <div\n                style={{\n                    textAlign: \"center\",\n                    fontWeight: \"700\",\n                    width: \"65px\"\n                }}\n            >\n                <div\n                    style={{\n                        fontSize: \"30px\"\n                    }}\n                >\n                    {countdown.minute.toString().padStart(2, '0')}\n                </div>\n\n                <div\n                    style={{\n                        fontSize: \"12px\",\n                        lineHeight: \"25px\"\n                    }}\n                >\n                    Minutos\n                </div>\n            </div>\n\n            <div\n                style={{\n                    textAlign: \"center\",\n                    fontWeight: \"700\",\n                    width: \"65px\"\n                }}\n            >\n                <div\n                    style={{\n                        fontSize: \"30px\"\n                    }}\n                >\n                    {countdown.second.toString().padStart(2, '0')}\n                </div>\n\n                <div\n                    style={{\n                        fontSize: \"12px\",\n                        lineHeight: \"25px\"\n                    }}\n                >\n                    Segundos\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default Countdown;"],"names":["_React$useState","React","_React$useState2","_slicedToArray","count","setCount","_React$useState3","hour","minute","second","_React$useState4","countdown","setcountdown","updateCount","prev","countdownInterval","setInterval","clearInterval","hh","mm","ss","parseInt","toString","_jsxs","style","display","gap","children","textAlign","fontWeight","width","_jsx","fontSize","padStart","lineHeight"],"sourceRoot":""}